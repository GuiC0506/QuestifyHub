import { PropsWithChildren } from "../types/TPropsWithChildren";
import { Component, createContext, createEffect, onMount, useContext } from "solid-js";
import { api } from "../lib/axios";
import { createStore } from "solid-js/store";

export type TUserContext = {
    _id:string
    country:string,
    email:string
}

export const UserContext = createContext({} as TUserContext);

export const UserContextProvider: Component<PropsWithChildren> = ({children}) => {
    const jwt = localStorage.getItem("token");
    const [userData, setUserData] = createStore<TUserContext>({} as TUserContext);

    onMount(async () => {
        try {
            const response = await api.get("/users/jwt", {
                headers: { Authorization: `Bearer ${jwt}` }
            });
            setUserData(response.data);
        } catch(err) {
            throw new Error("Error on get user");
        };
    });
    return (
        <UserContext.Provider value={userData}>
            {children}
        </UserContext.Provider>
    )
}

export const useUserContext = () => {
    return useContext(UserContext);
}

